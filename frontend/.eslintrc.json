{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["eslint:recommended", "plugin:react/recommended", "prettier"],
  "overrides": [],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },

  "settings": {
    "react": {
      "createClass": "createReactClass", // Regex for Component Factory to use,
      // default to "createReactClass"
      "pragma": "React", // Pragma to use, default to "React"
      "fragment": "Fragment", // Fragment to use (may be a property of <pragma>), default to "Fragment"
      "version": "detect", // React version. "detect" automatically picks the version you have installed.
      // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
      // It will default to "latest" and warn if missing, and to "detect" in the future
      "flowVersion": "0.53" // Flow version
    },
    "propWrapperFunctions": [
      // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
      "forbidExtraProps",
      { "property": "freeze", "object": "Object" },
      { "property": "myFavoriteWrapper" },
      // for rules that check exact prop wrappers
      { "property": "forbidExtraProps", "exact": true }
    ],
    "componentWrapperFunctions": [
      // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.
      "observer", // `property`
      { "property": "styled" }, // `object` is optional
      { "property": "observer", "object": "Mobx" },
      { "property": "observer", "object": "<pragma>" } // sets `object` to whatever value `settings.react.pragma` is set to
    ],
    "formComponents": [
      // Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } />
      "CustomForm",
      { "name": "Form", "formAttribute": "endpoint" }
    ],
    "linkComponents": [
      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      { "name": "Link", "linkAttribute": "to" }
    ]
  },
  "plugins": ["react", "react-hooks", "import", "jsx-a11y"],
  "rules": {
    "import/no-unresolved": 0,
    "generator-star-spacing": 0,
    "no-console": 0,
    "require-atomic-updates": 0,
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "arrow-body-style": 0,
    "arrow-parens": 0,
    "camelcase": 0,
    "comma-dangle": 0,
    "consistent-return": [
      2,
      {
        "treatUndefinedAsUnspecified": true
      }
    ],
    "template-curly-spacing": 0,
    "func-names": ["error", "never"],
    "function-paren-newline": 0,
    "implicit-arrow-linebreak": 0,
    "import/no-extraneous-dependencies": 0,
    "import/no-named-as-default": 0,
    "import/order": 2,
    "import/prefer-default-export": "off",
    "jsx-a11y/click-events-have-key-events": 1,
    "max-len": [
      2,
      {
        "code": 120,
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignoreTrailingComments": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "newline-before-return": 2,
    "no-confusing-arrow": 0,
    "no-else-return": 1,
    "no-nested-ternary": ["error"],
    "no-return-assign": 0,
    "no-param-reassign": 0,
    "no-plusplus": 0,
    "no-shadow": 0,
    "no-underscore-dangle": 0,
    "no-use-before-define": ["error", { "functions": false, "classes": false, "variables": false }],
    "object-curly-newline": [2, { "multiline": true, "consistent": true }],
    "one-var": ["error", "never"],
    "operator-linebreak": 0,
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "if" },
      { "blankLine": "any", "prev": "block-like", "next": "if" }
    ],
    "prefer-arrow-callback": 0,
    "prefer-const": 0,
    "prefer-destructuring": 0,
    "prefer-object-spread": 0,
    "prefer-spread": 0,
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "react/destructuring-assignment": 0,
    "react/function-component-definition": 0,
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    "react/forbid-prop-types": 0,
    "react/no-unused-prop-types": 2,
    "react/jsx-props-no-spreading": 0,
    "react/jsx-one-expression-per-line": 0,
    "react/state-in-constructor": 0,
    "react/static-property-placement": 0,
    "react/display-name": 0,
    "react/jsx-wrap-multilines": 0
  }
}
